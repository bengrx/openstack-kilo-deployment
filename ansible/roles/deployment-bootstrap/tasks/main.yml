---

 - name: Update the apt cache
   shell: apt-get update --fix-missing

 - name: Update all packages to latest version
   apt: upgrade=dist

 - name: Ensure that terminator is installed
   apt: pkg=terminator state=installed

 - name: Ensure that dnsmasq is installed
   apt: pkg=dnsmasq state=installed

 - name: Ensure that python-dev is installed
   apt: pkg=python-dev state=installed

 - name: Ensure that python-pip is installed
   apt: pkg=python-pip state=installed

 - name: Ensure that ansible is installed
   shell: pip install ansible

 - name: Ensure that apache2 is installed
   apt: pkg=apache2 state=installed

 - name: Ensure that dnsmasq is restarted
   service: name=dnsmasq state=restarted

 - name: Copy the templated dnsmasq.conf file
   template: src=dnsmasq.j2 dest=/etc/dnsmasq.conf

 - name: Copy the templated sysctl.conf file
   template: src=sysctl.j2 dest=/etc/sysctl.conf

 - name: Apply the new kernel parameters
   shell: sysctl -p

 - name: Ensure that the dnsmasq service is started 
   service: name=dnsmasq state=started

 - name: Create the /srv/tftp directory
   shell: mkdir -p /srv/tftp

 - name: Check to see if the /var/tftp directory contains a netboot.tar.gz file already
   shell: ls /srv/tftp/netboot.tar.gz | wc -l
   register: tftp_dir_contents

 - name: Download the netboot.tar.gz image from specified URL
   get_url: url={{ remote_netboot_image_path }} dest=/srv/tftp/netboot.tar.gz mode=0440
   when: '"{{ tftp_dir_contents.stdout }}" == "0"'

 - name: Unzip the netboot.tar.gz in the tftp directory
   unarchive: src=/srv/tftp/netboot.tar.gz dest=/srv/tftp/ copy=no

 - name: Copy the templated pxemenu
   template: src=txt.j2 dest=/srv/tftp/ubuntu-installer/amd64/boot-screens/txt.cfg

 - shell: iptables -F
 - shell: iptables -t nat -A POSTROUTING -o {{ public_interface }} -j MASQUERADE
 - shell: iptables -A FORWARD -i {{ public_interface }} -o {{ boot_interface }} -m state --state RELATED,ESTABLISHED -j ACCEPT
 - shell: iptables -A FORWARD -i {{ boot_interface }} -o {{ public_interface }} -j ACCEPT

 - name: Save the iptables rules
   shell: sudo sh -c "iptables-save > /etc/iptables.ipv4.nat" 

 - name: Append a line to load the rules to interfaces file
   lineinfile: dest=/etc/network/interfaces line='up iptables-restore < /etc/iptables.ipv4.nat' state=present

 - name: Copy the preseed_ctl.cfg file to /var/www
   template: src=preseed_ctl.j2 dest=/var/www/preseed_ctl.cfg

 - name: Copy the pxelinux.cfg/default config file
   template: src=default.j2 dest=/srv/tftp/pxelinux.cfg/default

 - name: Copy the hostnames file 
   template: src=hostnames dest=/var/www/hostnames

 - name: Remove the index.html file from /var/www/
   shell: rm -f /var/www/index.html
